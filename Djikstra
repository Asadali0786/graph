void djikstra(vector<vector<pair<int, int>>> &adj)
{

    // vector<pair<int,int>>pr;
    priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
    vector<int> dis(7, INT_MAX);

    dis[1] = 0;
    pq.push({0, 1});

    while (!pq.empty())
    {

        ll distance = pq.top().ff;
        ll node = pq.top().ss;
        pq.pop();
        for (auto &x : adj[node])
        {
            if (dis[x.first] > dis[node] + x.ss)
            {
                dis[x.ff] = dis[node] + x.ss;
                pq.push(piir(dis[x.ff], x.ff));
            }
        }
    }

    // for(int i=0 ; i<dis.size() ; i++){
    //     cout<<dis[i]<<" ";
    // }
    // cout<<endl;
}
